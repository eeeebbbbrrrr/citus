--
-- MULTI_AGG_DISTINCT
--

-- Create a new range partitioned lineitem table and stage data into it

CREATE TABLE lineitem_range (
	l_orderkey bigint not null,
	l_partkey integer not null,
	l_suppkey integer not null,
	l_linenumber integer not null,
	l_quantity decimal(15, 2) not null,
	l_extendedprice decimal(15, 2) not null,
	l_discount decimal(15, 2) not null,
	l_tax decimal(15, 2) not null,
	l_returnflag char(1) not null,
	l_linestatus char(1) not null,
	l_shipdate date not null,
	l_commitdate date not null,
	l_receiptdate date not null,
	l_shipinstruct char(25) not null,
	l_shipmode char(10) not null,
	l_comment varchar(44) not null );
SELECT master_create_distributed_table('lineitem_range', 'l_orderkey', 'range');

\STAGE lineitem_range FROM '@abs_srcdir@/data/lineitem.1.data' with delimiter '|'
\STAGE lineitem_range FROM '@abs_srcdir@/data/lineitem.2.data' with delimiter '|'

-- Run aggregate(distinct) on partition column for range partitioned table

SELECT count(distinct l_orderkey) FROM lineitem_range;
SELECT avg(distinct l_orderkey) FROM lineitem_range;

-- Run count(distinct) on join between a range partitioned table and a single
-- sharded table. For this test, we also change a config setting to ensure that
-- we don't repartition any of the tables during the query.

SET citus.large_table_shard_count TO 2;

SELECT p_partkey, count(distinct l_orderkey) FROM lineitem_range, part
	WHERE l_partkey = p_partkey
	GROUP BY p_partkey
	ORDER BY p_partkey LIMIT 10;

RESET citus.large_table_shard_count;

-- Check that we don't support count(distinct) on non-partition column, and
-- complex expressions.

SELECT count(distinct l_partkey) FROM lineitem_range;
SELECT count(distinct (l_orderkey + 1)) FROM lineitem_range;

-- We shouldn't support grouping by a non-partition column either

SELECT count(distinct l_orderkey) FROM lineitem_range GROUP BY l_partkey;

-- Now test append partitioned tables. First run count(distinct) on a single
-- sharded table.

SELECT count(distinct p_mfgr) FROM part;
SELECT p_mfgr, count(distinct p_partkey) FROM part GROUP BY p_mfgr;

-- We don't support count(distinct) queries if table is append partitioned and
-- has multiple shards

SELECT count(distinct o_orderkey) FROM orders;

-- Hash partitioned tables:

CREATE TABLE nation_data (
    n_nationkey integer not null,
    n_name char(25) not null,
    n_regionkey integer not null,
    n_comment varchar(152)
);
SELECT master_create_distributed_table('nation_data', 'n_nationkey', 'hash');
-- Multiple shards so the check which allows distincts where there is only one shard doesn't trigger
SELECT master_create_worker_shards('nation_data', 4, 1);

-- agg(distinct) on non-partition columns is not supported
SELECT count(distinct n_regionkey) FROM nation_data;

-- agg(distinct) on partition columns is supported
SELECT count(distinct n_nationkey) FROM nation_data;

-- agg(distinct) is allowed if we group by partition column
SELECT count(distinct n_regionkey) FROM nation_data GROUP BY n_nationkey;
